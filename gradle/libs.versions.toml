[versions]
kotlin = "2.1.0"
datetime = "0.6.1"
coroutinesVersion = "1.9.0"
openapi-generator = "7.12.0"
jackson = "2.16.1"
validator = "0.13.2"
kotlin-serialization = "1.8.0"
ktor = "2.3.12"
mushko = "9.4.0"
kafka = "3.7.0"

log-encoder = "7.4"
logback = "1.5.3"

testcontainers = "1.21.1"
exposed = "0.50.0"

# BASE
jvm-compiler = "17"
jvm-language = "21"

[libraries]
plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
plugin-binaryCompatibilityValidator = {module = "org.jetbrains.kotlinx:binary-compatibility-validator", version.ref = "validator" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }
kotlinx-test = {module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutinesVersion"}
kotlinx-coroutines = {module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutinesVersion"}
jackson-kotlin = {module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson"}
jackson-datatype = {module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson"}
kotlinx-serialization-core = {module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlin-serialization"}
kotlinx-serialization-json = {module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlin-serialization"}
ktor-client-negotiation = {module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor"}
ktor-serialization-json = {module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor"}
ktor-serialization-jackson = {module = "io.ktor:ktor-serialization-jackson", version.ref = "ktor"}
ktor-server-core = {module = "io.ktor:ktor-server-core", version.ref = "ktor"}
ktor-server-cio = {module = "io.ktor:ktor-server-cio", version.ref = "ktor"}
ktor-server-netty = {module = "io.ktor:ktor-server-netty", version.ref = "ktor"}
ktor-server-cors = {module = "io.ktor:ktor-server-cors", version.ref = "ktor"}
ktor-server-test = {module = "io.ktor:ktor-server-test-host", version.ref = "ktor"}
ktor-server-yaml = {module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor"}
ktor-server-headers-response = {module = "io.ktor:ktor-server-auto-head-response", version.ref = "ktor"}
ktor-server-headers-default = {module = "io.ktor:ktor-server-default-headers", version.ref = "ktor"}
ktor-server-negotiation = {module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor"}
kafka-client = {module = "org.apache.kafka:kafka-clients", version.ref = "kafka"}
logback = {module = "ch.qos.logback:logback-classic", version.ref = "logback"}
logback-appenders = {module = "com.sndyuk:logback-more-appenders", version.ref = "logback"}
logback-logstash = {module = "net.logstash.logback:logstash-logback-encoder", version.ref = "log-encoder"}

testcontainers-core = {module = "org.testcontainers:testcontainers", version.ref = "testcontainers"}
testcontainers-postgres = {module = "org.testcontainers:postgresql", version.ref = "testcontainers"}

db-postgres = "org.postgresql:postgresql:42.7.3"
db-exposed-core = {module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed"}
db-exposed-dao = {module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed"}
db-exposed-jdbc = {module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed"}

[plugins]
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
openapi-generator = { id = "org.openapi.generator", version.ref = "openapi-generator" }
kotlinx-serialization = {id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin"}
ktor = {id = "io.ktor.plugin", version.ref = "ktor"}
mushko-plugin = {id = "com.bmushko.docker-remote-api", version.ref = "mushko"}